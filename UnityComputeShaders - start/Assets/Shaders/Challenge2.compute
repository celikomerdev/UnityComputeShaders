#include "noiseSimplex.cginc"
#define PI2 6.28318530718


RWTexture2D<float4> Result;
int texResolution;
float4 fillColor;
float4 clearColor;
int sides;
float time;


float polygon(float2 pt, float2 center, float radius, int sides, float rotate, float edge_thickness)
{
	pt -= center;
	
	//Angle and radius from the current pixel /
	float theta = atan2(pt.y, pt.x) + rotate;
	float rad = PI2/float(sides);

	// Shaping function that modulate the distance
	float d = cos(floor(0.5 + theta/rad)*rad-theta)*length(pt);
	return 1.0 - smoothstep(radius, radius + edge_thickness, d);
}

#pragma kernel CSMain
[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	float2 normalizedPos = (id.xy/(float)texResolution)-0.5f;
	
	float2 center = 0;
	float radius = 0.15f;
	float resultPolygon = polygon(normalizedPos,center,radius,sides,time,0.1f);
	
	float resultNoise = snoise(normalizedPos*100*(2+sin(time)));
	float4 resultColor = lerp(clearColor,fillColor,resultNoise);
	
	Result[id.xy] = resultPolygon*resultColor;
}